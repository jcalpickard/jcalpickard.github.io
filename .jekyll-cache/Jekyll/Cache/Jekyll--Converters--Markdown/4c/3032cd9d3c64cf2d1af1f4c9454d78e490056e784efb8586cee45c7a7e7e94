I"­<h1>Graph</h1>

<div id="network" style="width: 100%; height: 400px;"></div>
<div id="tooltip" class="graph-tooltip" style="display: none; position: absolute; background: #fff; border: 1px solid #ccc; padding: 10px; z-index: 1000;"></div>

<script type="text/javascript">
  fetch('/assets/graph-data.json')
    .then(response => response.json())
    .then(data => {
      const container = document.getElementById('network');
      const options = {
        nodes: {
          shape: 'dot',
          size: 20,
          font: {
            size: 15,
            color: '#000000'
          }
        },
        edges: {
          width: 2
        }
      };

      // Convert links to edges
      const edges = data.links.map(link => ({
        from: link.source,
        to: link.target
      }));

      const networkData = {
        nodes: data.nodes,
        edges: edges
      };

    const network = new vis.Network(container, networkData, options);

      // Add hover event listener to nodes
      network.on("hoverNode", function (params) {
        const nodeId = params.node;
        const nodeData = data.nodes.find(node => node.id === nodeId);
        tooltip.innerHTML = `<strong>${nodeData.label}</strong><br>Stage: ${nodeData.stage}<br>Tags: ${nodeData.tags.join(', ')}`;
        tooltip.style.display = "block";
        tooltip.style.left = params.event.pageX + "px";
        tooltip.style.top = params.event.pageY + "px";
      });

      network.on("blurNode", function () {
        tooltip.style.display = "none";
      });

      // Add click event listener to nodes
      network.on('click', (params) => {
      if (params.nodes.length === 1) {
        const nodeId = params.nodes[0];
        const node = data.nodes.find(node => node.id === nodeId);
        if (node && node.url) {
          setTimeout(() => {
            window.location.href = node.url;
          }, 300);
        }
      }
    });
  });
</script>

<p>That was a graph.</p>
:ET